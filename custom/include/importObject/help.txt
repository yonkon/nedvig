1. Названия полей объекта(импортируемого из CMS) должны совпадать с системными названиями полей SugarCRM. 
2. Для использования импорта необходимо отправит массив содержащий необходимое действие  и передаваемые данные. Например:

$testData = array(
    "id" => "d003fc95-eacf-d821-404c-53721e8ea04f",
    "name" => "New test entry",
    "type" => "13",
     ….. 
    "pictures" => "<link>, <link>, ..., <link>",
    );

$data = array (
    'action' => 'update',
    'data' => base64_encode(serialize($testData)),
);

Поле “action” может принимать значения: update - обновление объекта, create - создание нового объекта, delete - удаление объекта

Поле “data” должно быть сериализованно и кодировано с помощью функции base64_encode.

3. При обновлении\ удалении объекта необходимо передавать ID объекта в стандарте SugarCRM. Например: "id" => "d003fc95-eacf-d821-404c-53721e8ea04f"

4. При создании нового объекта необходимо передать обязательные поля, а именно:
    "object_status_c" - Статус объекта
    "type" - Тип объекта
    "category_c" - Категория объекта
    "sea_distance_c" - Удаленность от моря 
    "comm_center_distance_c" - Удаленность от коммерческих центров
    "address" - Точный адрес объекта
    "total_area_c" - Общая площадь
    "number_bedroom_c" - Кол-во спален
    "number_bathroom_c" - Кол-во ванных комнат

5. Картинки передаются в виде строки разделенной запятыми (с полным адресом). Например: "pictures" => "http://costaiberia.ru/upload/iblock/b86/266_g.jpg, http://costaiberia.ru/upload/iblock/4b4/1868_o.jpg, http://costaiberia.ru/upload/iblock/fa1/1870_o.jpg",

6. Запрос в случае успеха вернет пустой массив. В случае возникновения ощибок, вернет массив:
array (
    'isError' => array(массив ошибок), // содержит критические ошибки. Например: если данные не сохранены или не заполнены обязательные поля.
    'isErrorNoCritical' => array(массив ошибок), .// содержит НЕ критические ошибки. Например: одно из полей не прошло валидацию или не удалось загрузить картинку в систему.
);